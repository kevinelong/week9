{"version":3,"sources":["standard_ajax_process.js"],"names":["data_to_send","name","price","log","console","text_to_send","_typeof","response","text","received_text","received_data"],"mappings":"8PAGIA,aAAe,CAHfC,KAAA,SAEAC,MAAA,QAEID,QAAME,IAANF,oBADWD,aACXC,YAAAA,QADWD,eAIfI,aAAmBJ,KAAAA,UAAnBA,cAEAI,QAAAD,IAAA,oBAAAE,aAAA,YAAAC,QAAAD,eAIAE,SAAA,CAAAC,KAAAH,cAEAE,cAAWA,SAAAC,KAACA,QAAKH,IAALG,oBAAKH,cAALG,YAAAA,QAAKH,gBAIjBD,cAAmBK,KAAAA,MAAAA,eAEnBL,QAAAD,IAAA,oBAAAO,cAAA,YAAAJ,QAAAI,gBAEAA,QAAAA,IAAAA,mBAAAA,OAKYA,cAAcT,KAL1BS,qBAAAA,OACAA,cAAmBA,MADnBA","file":"standard_ajax_process.min.js","sourcesContent":["    // PROCESS: the role of stringify and parse to send/post new data from client/browser to server via HTTP\r\n\r\n    // 1. Have some data, maybe from some user input\r\n    data_to_send = {\r\n        name: \"widget\",\r\n        price: 123.45\r\n    }\r\n    console.log(typeof data_to_send) //object\r\n    \r\n    // 2. Convert data to a string\r\n    text_to_send = JSON.stringify(data_to_send)\r\n    console.log(typeof text_to_send) //string\r\n    \r\n    // 3. Send using fetch() with POST options\r\n    // (Mocking this for now. Echoing it back.)\r\n    response = {text:text_to_send};\r\n\r\n    // 4. Receive Response as JSON string\r\n    received_text = response.text;\r\n    console.log(typeof received_text) //string\r\n\r\n    // 5. convert text into javascript data.\r\n    // (Sometimes this is done using a response object's .json() method instead but its the new way)\r\n    received_data = JSON.parse(received_text) //convert from string to binary javascript data types in memory\r\n    console.log(typeof received_data) //object\r\n\r\n    // 6. use response\r\n    console.log(`\r\n        NAME: ${received_data.name}\r\n        PRICE: ${received_data.price}\r\n    `)\r\n\r\n    // END"]}